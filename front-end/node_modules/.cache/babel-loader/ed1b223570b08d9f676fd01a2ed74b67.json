{"ast":null,"code":"var _jsxFileName = \"F:\\\\Gabriel\\\\RocketSeat\\\\Bootcamp\\\\modulo9--frontend\\\\src\\\\routes\\\\Route.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthLayout from '../pages/_layout/auth';\nimport DefaultLayout from '../pages/_layout/deafult';\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = false;\n\n  if (!signed && isPrivate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (signed && !isPrivate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const Layout = signed ? DefaultLayout : AuthLayout;\n  console.tron.log({\n    Layout\n  });\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }));\n}\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};","map":{"version":3,"sources":["F:/Gabriel/RocketSeat/Bootcamp/modulo9--frontend/src/routes/Route.js"],"names":["React","PropTypes","Route","Redirect","AuthLayout","DefaultLayout","RouteWrapper","component","Component","isPrivate","rest","signed","Layout","console","tron","log","props","propTypes","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,SAAS,EAAEC,SADwB;AAEnCC,EAAAA,SAFmC;AAGnC,KAAGC;AAHgC,CAAtB,EAIZ;AACD,QAAMC,MAAM,GAAG,KAAf;;AAEA,MAAI,CAACA,MAAD,IAAWF,SAAf,EAA0B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIE,MAAM,IAAI,CAACF,SAAf,EAA0B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,QAAMG,MAAM,GAAGD,MAAM,GAAGN,aAAH,GAAmBD,UAAxC;AAEAS,EAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB;AAAEH,IAAAA;AAAF,GAAjB;AACA,sBACE,oBAAC,KAAD,oBACMF,IADN;AAEE,IAAA,MAAM,EAAGM,KAAD,iBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAUD;AAEDV,YAAY,CAACW,SAAb,GAAyB;AACvBR,EAAAA,SAAS,EAAER,SAAS,CAACiB,IADE;AAEvBX,EAAAA,SAAS,EAAEN,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACmB,OAAX,EAAoBnB,SAAS,CAACoB,IAA9B,CAApB,EACRC;AAHoB,CAAzB;AAMAhB,YAAY,CAACiB,YAAb,GAA4B;AAC1Bd,EAAAA,SAAS,EAAE;AADe,CAA5B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport AuthLayout from '../pages/_layout/auth';\nimport DefaultLayout from '../pages/_layout/deafult';\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = false;\n\n  if (!signed && isPrivate) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (signed && !isPrivate) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  const Layout = signed ? DefaultLayout : AuthLayout;\n\n  console.tron.log({ Layout });\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )}\n    />\n  );\n}\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: false,\n};\n"]},"metadata":{},"sourceType":"module"}