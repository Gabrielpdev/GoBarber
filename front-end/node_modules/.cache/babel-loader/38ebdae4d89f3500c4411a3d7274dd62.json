{"ast":null,"code":"var _jsxFileName = \"F:\\\\Gabriel\\\\RocketSeat\\\\Bootcamp\\\\modulo9--frontend\\\\src\\\\routes\\\\Route.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nexport default function RoutesWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = false;\n\n  if (!signed && isPrivate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (signed && !isPrivate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    component: Component,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }));\n}\nRoutesWrapper.PropTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRoutesWrapper.defaultProps = {\n  isPrivate: false\n};","map":{"version":3,"sources":["F:/Gabriel/RocketSeat/Bootcamp/modulo9--frontend/src/routes/Route.js"],"names":["React","PropTypes","Route","Redirect","RoutesWrapper","component","Component","isPrivate","rest","signed","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,eAAe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,SAAS,EAAEC,SADyB;AAEpCC,EAAAA,SAFoC;AAGpC,KAAGC;AAHiC,CAAvB,EAIZ;AACD,QAAMC,MAAM,GAAG,KAAf;;AAEA,MAAI,CAACA,MAAD,IAAWF,SAAf,EAA0B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIE,MAAM,IAAI,CAACF,SAAf,EAA0B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBAAO,oBAAC,KAAD,oBAAWC,IAAX;AAAiB,IAAA,SAAS,EAAEF,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;AAEDF,aAAa,CAACH,SAAd,GAA0B;AACxBM,EAAAA,SAAS,EAAEN,SAAS,CAACS,IADG;AAExBL,EAAAA,SAAS,EAAEJ,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACW,OAAX,EAAoBX,SAAS,CAACY,IAA9B,CAApB,EACRC;AAHqB,CAA1B;AAMAV,aAAa,CAACW,YAAd,GAA6B;AAC3BR,EAAAA,SAAS,EAAE;AADgB,CAA7B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default function RoutesWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = false;\n\n  if (!signed && isPrivate) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (signed && !isPrivate) {\n    return <Redirect to=\"dashboard\" />;\n  }\n\n  return <Route {...rest} component={Component} />;\n}\n\nRoutesWrapper.PropTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n};\n\nRoutesWrapper.defaultProps = {\n  isPrivate: false,\n};\n"]},"metadata":{},"sourceType":"module"}