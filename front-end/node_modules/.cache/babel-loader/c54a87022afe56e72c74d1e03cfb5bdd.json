{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from \"../../../services/api\";\nimport history from \"../../../services/history\";\nimport { signInSuccess } from './actions';\nexport function* signIn({\n  payload\n}) {\n  try {\n    const {\n      email,\n      password\n    } = payload;\n    const response = call(api.post, 'sessions', {\n      email,\n      password\n    });\n    console.tron.log('chamou');\n    const {\n      token,\n      user\n    } = response.data;\n\n    if (!user.provider) {\n      toast.error('Usuário não é um prestador de serviço');\n      return;\n    }\n\n    yield put(signInSuccess(token, user));\n    history.push('/dashboard');\n  } catch (err) {\n    console.tron.log(err);\n  }\n}\nexport default all([takeLatest('@auth/SIGN_IN_REQUEST', signIn)]);","map":{"version":3,"sources":["F:/Gabriel/RocketSeat/Bootcamp/modulo9--frontend/src/store/modules/auth/sagas.js"],"names":["takeLatest","call","put","all","toast","api","history","signInSuccess","signIn","payload","email","password","response","post","console","tron","log","token","user","data","provider","error","push","err"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,SAASC,aAAT,QAA8B,WAA9B;AAEA,OAAO,UAAUC,MAAV,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AACnC,MAAI;AACF,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBF,OAA5B;AAEA,UAAMG,QAAQ,GAAGX,IAAI,CAACI,GAAG,CAACQ,IAAL,EAAW,UAAX,EAAuB;AAC1CH,MAAAA,KAD0C;AAE1CC,MAAAA;AAF0C,KAAvB,CAArB;AAKAG,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,QAAjB;AAEA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBN,QAAQ,CAACO,IAAjC;;AAEA,QAAI,CAACD,IAAI,CAACE,QAAV,EAAoB;AAClBhB,MAAAA,KAAK,CAACiB,KAAN,CAAY,uCAAZ;AACA;AACD;;AAED,UAAMnB,GAAG,CAACK,aAAa,CAACU,KAAD,EAAQC,IAAR,CAAd,CAAT;AAEAZ,IAAAA,OAAO,CAACgB,IAAR,CAAa,YAAb;AACD,GApBD,CAoBE,OAAOC,GAAP,EAAY;AACZT,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBO,GAAjB;AACD;AACF;AAED,eAAepB,GAAG,CAAC,CAACH,UAAU,CAAC,uBAAD,EAA0BQ,MAA1B,CAAX,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '~/services/api';\nimport history from '~/services/history';\n\nimport { signInSuccess } from './actions';\n\nexport function* signIn({ payload }) {\n  try {\n    const { email, password } = payload;\n\n    const response = call(api.post, 'sessions', {\n      email,\n      password,\n    });\n\n    console.tron.log('chamou');\n\n    const { token, user } = response.data;\n\n    if (!user.provider) {\n      toast.error('Usuário não é um prestador de serviço');\n      return;\n    }\n\n    yield put(signInSuccess(token, user));\n\n    history.push('/dashboard');\n  } catch (err) {\n    console.tron.log(err);\n  }\n}\n\nexport default all([takeLatest('@auth/SIGN_IN_REQUEST', signIn)]);\n"]},"metadata":{},"sourceType":"module"}