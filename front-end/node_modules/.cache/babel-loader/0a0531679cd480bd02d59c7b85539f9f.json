{"ast":null,"code":"var _jsxFileName = \"F:\\\\Gabriel\\\\RocketSeat\\\\Bootcamp\\\\modulo9--frontend\\\\src\\\\pages\\\\Profile\\\\AvatarInput\\\\index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useField } from '@rocketseat/unform';\nimport api from \"../../../services/api\";\nimport { Container } from './styles';\nexport default function AvatarInput() {\n  const {\n    defaultValue,\n    registerField\n  } = useField('avatar');\n  const [file, setFile] = useState(defaultValue && defaultValue.id);\n  const [preview, setPreview] = useState(defaultValue && defaultValue.url);\n  const ref = useRef();\n  useEffect(() => {}, [ref, registerField]);\n\n  async function handleChange(e) {\n    const data = new FormData();\n    data.append('file', e.target.files[0]);\n    const response = await api.post('files', data);\n    const {\n      id,\n      url\n    } = response.data;\n    setFile(id);\n    setPreview(url);\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"avatar\",\n    accept: \"image/\",\n    \"data-file\": file,\n    onChange: handleChange,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["F:/Gabriel/RocketSeat/Bootcamp/modulo9--frontend/src/pages/Profile/AvatarInput/index.js"],"names":["React","useState","useRef","useEffect","useField","api","Container","AvatarInput","defaultValue","registerField","file","setFile","id","preview","setPreview","url","ref","handleChange","e","data","FormData","append","target","files","response","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,SAAT,QAA0B,UAA1B;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCL,QAAQ,CAAC,QAAD,CAAhD;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACO,YAAY,IAAIA,YAAY,CAACI,EAA9B,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAACO,YAAY,IAAIA,YAAY,CAACO,GAA9B,CAAtC;AAEA,QAAMC,GAAG,GAAGd,MAAM,EAAlB;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACa,GAAD,EAAMP,aAAN,CAAX,CAAT;;AAEA,iBAAeQ,YAAf,CAA4BC,CAA5B,EAA+B;AAC7B,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB;AAEA,UAAMC,QAAQ,GAAG,MAAMnB,GAAG,CAACoB,IAAJ,CAAS,OAAT,EAAkBN,IAAlB,CAAvB;AAEA,UAAM;AAAEP,MAAAA,EAAF;AAAMG,MAAAA;AAAN,QAAcS,QAAQ,CAACL,IAA7B;AAEAR,IAAAA,OAAO,CAACC,EAAD,CAAP;AACAE,IAAAA,UAAU,CAACC,GAAD,CAAV;AACD;;AAED,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAC,EAAT;AAAY,IAAA,GAAG,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,iBAAWL,IAJb;AAKE,IAAA,QAAQ,EAAEO,YALZ;AAME,IAAA,GAAG,EAAED,GANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AAgBD","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useField } from '@rocketseat/unform';\n\nimport api from '~/services/api';\n\nimport { Container } from './styles';\n\nexport default function AvatarInput() {\n  const { defaultValue, registerField } = useField('avatar');\n\n  const [file, setFile] = useState(defaultValue && defaultValue.id);\n  const [preview, setPreview] = useState(defaultValue && defaultValue.url);\n\n  const ref = useRef();\n\n  useEffect(() => {}, [ref, registerField]);\n\n  async function handleChange(e) {\n    const data = new FormData();\n\n    data.append('file', e.target.files[0]);\n\n    const response = await api.post('files', data);\n\n    const { id, url } = response.data;\n\n    setFile(id);\n    setPreview(url);\n  }\n\n  return (\n    <Container>\n      <label htmlFor=\"avatar\">\n        <img src=\"\" alt=\"\" />\n\n        <input\n          type=\"file\"\n          id=\"avatar\"\n          accept=\"image/\"\n          data-file={file}\n          onChange={handleChange}\n          ref={ref}\n        />\n      </label>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}